version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: radiocalico-postgres
    environment:
      POSTGRES_DB: radiocalico
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:?Database password must be set in environment}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - radiocalico-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: radiocalico-app
    environment:
      NODE_ENV: production
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: radiocalico
      DB_USER: postgres
      DB_PASSWORD: ${DB_PASSWORD:?Database password must be set in environment}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - radiocalico-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: radiocalico-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./public:/usr/share/nginx/html:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - radiocalico-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/nginx-health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:

networks:
  radiocalico-network:
    driver: bridge