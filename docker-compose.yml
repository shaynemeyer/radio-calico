version: '3.8'

services:
  radiocalico-prod:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: radiocalico-production
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_PATH=/app/data/database.db
    volumes:
      - radiocalico-data:/app/data
    restart: unless-stopped
    networks:
      - radiocalico-network
    profiles:
      - production

  radiocalico-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: radiocalico-development
    ports:
      - "3000:3000"
      - "9229:9229"  # Node.js debugger port
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DATABASE_PATH=/app/data/database.db
    volumes:
      - .:/app
      - /app/node_modules
      - radiocalico-dev-data:/app/data
    networks:
      - radiocalico-network
    profiles:
      - development

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: radiocalico-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - radiocalico-prod
    networks:
      - radiocalico-network
    profiles:
      - production
      - nginx

volumes:
  radiocalico-data:
    driver: local
  radiocalico-dev-data:
    driver: local

networks:
  radiocalico-network:
    driver: bridge